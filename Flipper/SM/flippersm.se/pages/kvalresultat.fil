<?php

  $tournament = (isset($_REQUEST['t']) && preg_match('/^[0-9]+$/', $_REQUEST['t'])) ? $_REQUEST['t'] : 1;
  $active = (isset($_REQUEST['active']) && $_REQUEST['active'] == 1) ? true : false;
  $noOfGames = array(1 => 4, 2 => 4, 3 => 4);
  $noTeamPlayers = 2;

  $content = '
    <h1>Kvalresultat</h1>
    <p class="submenu2" id="tab_links"><a href="#mainTable">Main</a> <a href="#classicsTable">Classics</a> <a href="#u18Table">U18</a> <a href="#teamTable">Dubbel</a></p>
  ';

  if ($active) {
    $content .= '
      <p>Nedan hittar du direktsända kvalresultat från samtliga divisioner.</p>
      <p>"Här" betyder att spelaren är registrerad som närvarande idag, vilket ju har stor betydelse innan finalspelet startar i respektive division.</p>
    ';
    $players = getPlayers($dbh, ' where m.tournamentEdition_id = '.$tournament);
    if (is_array($players) && count($players) > 0) {
      $content .= '
            <div id="mainTable" class="section">
              <table class="standings">
                <thead>
                  <tr>
                    <th>Plats</th>
                    <th>Namn</th>
      ';
      for ($i = 1; $i <= $noOfGames[1]; $i++) {
        $content .= '<th>Spel #'.$i.'</th>';
      }
      $content .= '
                    <th>Poäng</th>
                    <th>Här</th>
                  </tr>
                </thead>
                <tbody>
      ';
      foreach ($players as $player) {
        $qualEntries = $player->getEntries($dbh, $tournament, 1);
        if (is_array($qualEntries) && count($qualEntries) > 0) {
          foreach ($qualEntries as $qualEntry) {
            $content .= '
                  <tr>
                    <td>'.$qualEntry->place.'</td>
                    <td>'.$player->getLink().'</td>
            ';
            $qualScores = $qualEntry->getScores($dbh);
            $i = 0;
            if (is_array($qualScores) && count($qualScores) > 0) {
              foreach ($qualScores as $qualScore) {
                $game = getGameById($dbh, $qualScore->game_id);
                $game->name = ($game->shortName) ? $game->shortName : $game->name;
                $content .= '<td>'.$qualScore->place.' on '.$game->getLink().' ('.round($qualScore->points).')</td>';
                $i++;
//                $content .= (($qualScore->bestPlace) ? $qualScore->bestPlace.' on ' : '').'<a href="'.__baseHref__.'/game/?obj=game&id='.$qualScore->gameId.'">'.$qualScore->game.'</a>'.(($qualScore->maxPoints) ? ' ('.$qualScore->maxPoints.')' : '').', ';
              }
            }
            while ($i < $noOfGames[1]) {
              $content .= '<td></td>';
              $i++;
            }
            $content .= '
                    <td>'.round($qualEntry->points).'</td>
                    <td><input type="checkbox" '.(($player->here) ? 'checked' : '').' disabled></td>
                  </tr>
            ';
          }
        }
      }
    }
    $content .=  '</tbody></table></div>';
    $players = getPlayers($dbh, ' where cl.id is not null and m.tournamentEdition_id = '.$tournament);
    if (is_array($players) && count($players) > 0) {
      $content .= '
            <div id="classicsTable" class="section hidden">
              <table class="standings">
                <thead>
                  <tr>
                    <th>Plats</th>
                    <th>Namn</th>
      ';
      for ($i = 1; $i <= $noOfGames[2]; $i++) {
        $content .= '<th>Spel #'.$i.'</th>';
      }
      $content .= '
                    <th>Poäng</th>
                    <th>Här</th>
                  </tr>
                </thead>
                <tbody>
      ';
      foreach ($players as $player) {
        $qualEntries = $player->getEntries($dbh, $tournament, 2);
        if (is_array($qualEntries) && count($qualEntries) > 0) {
          foreach ($qualEntries as $qualEntry) {
            $content .= '
                  <tr>
                    <td>'.$qualEntry->place.'</td>
                    <td>'.$player->getLink().'</td>
            ';
            $qualScores = $qualEntry->getScores($dbh);
            $i = 0;
            if (is_array($qualScores) && count($qualScores) > 0) {
              foreach ($qualScores as $qualScore) {
                $game = getGameById($dbh, $qualScore->game_id);
                $game->name = ($game->shortName) ? $game->shortName : $game->name;
                $content .= '<td>'.$qualScore->place.' on '.$game->getLink().' ('.round($qualScore->points).')</td>';
                $i++;
//                $content .= (($qualScore->bestPlace) ? $qualScore->bestPlace.' on ' : '').'<a href="'.__baseHref__.'/game/?obj=game&id='.$qualScore->gameId.'">'.$qualScore->game.'</a>'.(($qualScore->maxPoints) ? ' ('.$qualScore->maxPoints.')' : '').', ';
              }
            }
            while ($i < $noOfGames[2]) {
              $content .= '<td></td>';
              $i++;
            }
            $content .= '
                    <td>'.round($qualEntry->points).'</td>
                    <td><input type="checkbox" '.(($player->here) ? 'checked' : '').' disabled></td>
                  </tr>
            ';
          }
        }
      }
    }
    $content .=  '</tbody></table></div>';
    $ageLimit = array(
      1 => '1995-11-07',
      2 => '1994-11-17',
      3 => '1993-11-26',
      4 => '1994-11-13'
    );
    $players = getPlayers($dbh, ' where m.id is not null and m.tournamentEdition_id = '.$tournament.' and m.birthDate > "'.$ageLimit[$tournament].'" ');
    if (is_array($players) && count($players) > 0) {
      $content .= '
            <div id="u18Table" class="section hidden">
              <table class="standings">
                <thead>
                  <tr>
                    <th>Plats</th>
                    <th>Namn</th>
      ';
      for ($i = 1; $i <= $noOfGames[1]; $i++) {
        $content .= '<th>Spel #'.$i.'</th>';
      }
      $content .= '
                    <th>Poäng</th>
                    <th>Här</th>
                  </tr>
                </thead>
                <tbody>
      ';
      foreach ($players as $player) {
        $qualEntries = $player->getEntries($dbh, $tournament, 2);
        if (is_array($qualEntries) && count($qualEntries) > 0) {
          foreach ($qualEntries as $qualEntry) {
            $content .= '
                  <tr>
                    <td>'.$qualEntry->place.'</td>
                    <td>'.$player->getLink().'</td>
            ';
            $qualScores = $qualEntry->getScores($dbh);
            $i = 0;
            if (is_array($qualScores) && count($qualScores) > 0) {
              foreach ($qualScores as $qualScore) {
                $game = getGameById($dbh, $qualScore->game_id);
                $game->name = ($game->shortName) ? $game->shortName : $game->name;
                $content .= '<td>'.$qualScore->place.' on '.$game->getLink().' ('.round($qualScore->points).')</td>';
                $i++;
//                $content .= (($qualScore->bestPlace) ? $qualScore->bestPlace.' on ' : '').'<a href="'.__baseHref__.'/game/?obj=game&id='.$qualScore->gameId.'">'.$qualScore->game.'</a>'.(($qualScore->maxPoints) ? ' ('.$qualScore->maxPoints.')' : '').', ';
              }
            }
            while ($i < $noOfGames[1]) {
              $content .= '<td></td>';
              $i++;
            }
            $content .= '
                    <td>'.round($qualEntry->points).'</td>
                    <td><input type="checkbox" '.(($player->here) ? 'checked' : '').' disabled></td>
                  </tr>
            ';
          }
        }
      }
    }
    $content .=  '</tbody></table></div>';
    $teams = getTeams($dbh, ' where tm.tournamentDivision_id = '.(($tournament == 2) ? 6 : 3).' ');
    if (is_array($teams) && count($teams) > 0) {
      $content .= '
            <div id="teamTable" class="section hidden">
              <table class="standings">
                <thead>
                  <tr>
                    <th>Plats</th>
                    <th>Namn</th>
      ';
      for ($i = 1; $i <= $noOfGames[3]; $i++) {
        $content .= '<th>Spel #'.$i.'</th>';
      }
      $content .= '
                    <th>Poäng</th>
                    <th>Här</th>
                  </tr>
                </thead>
                <tbody>
      ';
      foreach ($teams as $team) {
        $qualEntries = $team->getEntries($dbh, $tournament, 3);
        if (is_array($qualEntries) && count($qualEntries) > 0) {
          foreach ($qualEntries as $qualEntry) {
            $content .= '
                  <tr>
                    <td>'.$qualEntry->place.'</td>
                    <td>'.$team->getLink().'</td>
            ';
            $qualScores = $qualEntry->getScores($dbh);
            $i = 0;
            if (is_array($qualScores) && count($qualScores) > 0) {
              foreach ($qualScores as $qualScore) {
                $game = getGameById($dbh, $qualScore->game_id);
                $game->name = ($game->shortName) ? $game->shortName : $game->name;
                $content .= '<td>'.$qualScore->place.' on '.$game->getLink().' ('.round($qualScore->points).')</td>';
                $i++;
//                $content .= (($qualScore->bestPlace) ? $qualScore->bestPlace.' on ' : '').'<a href="'.__baseHref__.'/game/?obj=game&id='.$qualScore->gameId.'">'.$qualScore->game.'</a>'.(($qualScore->maxPoints) ? ' ('.$qualScore->maxPoints.')' : '').', ';
              }
            }
            while ($i < $noOfGames[3]) {
              $content .= '<td></td>';
              $i++;
            }
            $content .= '
                    <td>'.round($qualEntry->points).'</td>
                    <td>
            ';
            $players = $team->getMembers($dbh);
            $i = 0;
            while ($i < $noTeamPlayers) {
              $content .= '<input type="checkbox" '.(($players[$i]->here) ? 'checked' : '').' disabled>';
              $i++;
            }
            $content .= '
                    </td>
                  </tr>
            ';
          }
        }
      }
    }
    $content .=  '</tbody></table></div>';
    $content .= getDataTables('.standings');
  } else {
    $content .= '
      <p>Nedan kommer du att hitta direktsända kvalresultat från samtliga divisioner.</p>
    ';
  }

  echo $content;

?>

